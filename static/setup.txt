plugin.tx_jfimageflow_pi1 {

	jsInFooter = {$plugin.tx_jfimageflow_pi1.jsInFooter}
	jsMinify = {$plugin.tx_jfimageflow_pi1.jsMinify}
	jsInline = {$plugin.tx_jfimageflow_pi1.jsInline}
	cssMinify = {$plugin.tx_jfimageflow_pi1.cssMinify}

	imageFlowJS = {$plugin.tx_jfimageflow_pi1.file.imageFlowJS}
	imageFlowCSS = {$plugin.tx_jfimageflow_pi1.file.imageFlowCSS}
	imagePath = {$plugin.tx_jfimageflow_pi1.imagePath}
	reflectPath = {$plugin.tx_jfimageflow_pi1.reflectPath}

	imagewidth = {$plugin.tx_jfimageflow_pi1.imagewidth}
	imageheight = {$plugin.tx_jfimageflow_pi1.imageheight}
	scaledwidth = {$plugin.tx_jfimageflow_pi1.scaledwidth}
	scaledheight = {$plugin.tx_jfimageflow_pi1.scaledheight}
	imageCursor = {$plugin.tx_jfimageflow_pi1.imageCursor}
	imageFocusM = {$plugin.tx_jfimageflow_pi1.imageFocusM}
	imageFocusMax = {$plugin.tx_jfimageflow_pi1.imageFocusMax}
	imageScaling = {$plugin.tx_jfimageflow_pi1.imageScaling}
	imagesHeight = {$plugin.tx_jfimageflow_pi1.imagesHeight}
	imagesM = {$plugin.tx_jfimageflow_pi1.imagesM}
	opacity = {$plugin.tx_jfimageflow_pi1.opacity}
	percentLandscape = {$plugin.tx_jfimageflow_pi1.percentLandscape}
	percentOther = {$plugin.tx_jfimageflow_pi1.percentOther}
	preloadImages = {$plugin.tx_jfimageflow_pi1.preloadImages}

	animationSpeed = {$plugin.tx_jfimageflow_pi1.animationSpeed}
	aspectRatio = {$plugin.tx_jfimageflow_pi1.aspectRatio}
	captionsToggle = {$plugin.tx_jfimageflow_pi1.captionsToggle}
	circular = {$plugin.tx_jfimageflow_pi1.circular}
	slideshowAutoplay = {$plugin.tx_jfimageflow_pi1.slideshowAutoplay}
	slideshowSpeed = {$plugin.tx_jfimageflow_pi1.slideshowSpeed}

	reflections = {$plugin.tx_jfimageflow_pi1.reflections}
	reflectionPNG = {$plugin.tx_jfimageflow_pi1.reflectionPNG}
	reflectionGET = {$plugin.tx_jfimageflow_pi1.reflectionGET}
	reflectionP = {$plugin.tx_jfimageflow_pi1.reflectionP}
	backgroundColor = {$plugin.tx_jfimageflow_pi1.backgroundColor}

	buttons = {$plugin.tx_jfimageflow_pi1.buttons}
	slider = {$plugin.tx_jfimageflow_pi1.slider}
	slideshow = {$plugin.tx_jfimageflow_pi1.slideshow}
	scrollbarP = {$plugin.tx_jfimageflow_pi1.scrollbarP}
	sliderCursor = {$plugin.tx_jfimageflow_pi1.sliderCursor}
	sliderWidth = {$plugin.tx_jfimageflow_pi1.sliderWidth}

	xStep = {$plugin.tx_jfimageflow_pi1.xStep}
	startID = {$plugin.tx_jfimageflow_pi1.startID}
	glideToStartID = {$plugin.tx_jfimageflow_pi1.glideToStartID}
	startAnimation = {$plugin.tx_jfimageflow_pi1.startAnimation}

	damCaptionFields = {$plugin.tx_jfimageflow_pi1.damCaptionFields}
	damDescFields = {$plugin.tx_jfimageflow_pi1.damDescFields}
	damHrefFields = {$plugin.tx_jfimageflow_pi1.damHrefFields}

	options (
	)
	optionsOverride = 0

	imageflow {
		normal {
			image {
				file {
					import.data = register:file
					width.data = register:imagewidth
					height.data = register:imageheight
				}
				altText {
					data = register:caption
					stripHtml = 1
				}
				titleText < .altText
				longdescURL >
				longdescURL {
					typolink {
						parameter.data = register:href
						parameter.ifEmpty.cObject = IMG_RESOURCE
						parameter.ifEmpty.cObject {
							file.import.data = TSFE:lastImageInfo|origFile
							file.maxW = {$plugin.tx_jfimageflow_pi1.scaledwidth}
							file.maxH = {$plugin.tx_jfimageflow_pi1.scaledheight}
						}
						returnLast = url
					}
				}
			}
			stdWrap {
				dataWrap = <div id="{register:key}" class="imageflow"> | </div>
				required = 1
			}
			description = COA
			description {
				10 = RECORDS
				10 {
					tables = tt_content
					source.data = register:description
					dontCheckPid = 1
				}
				stdWrap {
					dataWrap = <div id="{register:key}-{register:IMAGE_NUM_CURRENT}" class="description"> | </div>
				}
			}
			descriptionWrap {
				dataWrap = <div id="{register:key}-desc"> | </div>
				required = 1
			}
		}
	}
}